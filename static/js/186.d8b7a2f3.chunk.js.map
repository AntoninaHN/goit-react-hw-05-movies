{"version":3,"file":"static/js/186.d8b7a2f3.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,wEACgDc,EADhD,+CAKxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACaf,EADb,oBAKxB,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,oBAKxB,SAASiB,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,6B,kHC7BhB,SAASkB,IACtB,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAkBF,GAASS,MAAK,SAACC,GAAD,OAAUH,EAAWG,EAAKC,cACzD,CAACX,KAGF,8BACGM,IACC,wBACGA,EAAQM,KAAI,SAACC,GAAD,OACX,2BACE,mCAAWA,EAAOC,WAClB,uBAAID,EAAOE,YAFJF,EAAOG,eAAeC","sources":["components/Api/Api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"7c2b5f1208ac9dcd0fcc391e6217ace1\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=7c2b5f1208ac9dcd0fcc391e6217ace1&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"../Api/Api\";\n\n// // import styles from './components/Navigation/Navigation.module.css';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then((data) => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.author_details.username}>\n              <p>Author:{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","MovieDetailsPage","useParams","useState","reviews","setReviews","useEffect","then","data","results","map","review","author","content","author_details","username"],"sourceRoot":""}