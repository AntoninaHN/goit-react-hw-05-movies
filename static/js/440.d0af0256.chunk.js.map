{"version":3,"file":"static/js/440.d0af0256.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0Ba,EAD1B,+CAKxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACaf,EADb,oBAKxB,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,oBAKxB,SAASiB,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,6B,kHClC/B,EAA4B,oCAA5B,EAA+E,uCAA/E,EAAsI,wCAAtI,EAA8L,wCAA9L,EAA4O,8B,SCW7N,SAASkB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MACRP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAAkCV,EAAAA,EAAAA,UAAS,IAA3C,eAAOW,EAAP,KAAkBC,EAAlB,KA4BA,OAXAC,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,IAAaC,GAASuB,MAAK,SAACC,GAC1BL,EAAU,kCAAD,OAAmCK,EAAKC,cACjDd,EAASa,EAAKE,gBACdb,EAAYW,EAAKZ,UACjBG,EAAQS,EAAKG,aAAaC,MAAM,EAAG,IACnCX,EAjBJ,SAA4BD,GAC1B,IAAMa,EAAa,GAOnB,OANAb,EAAOc,KAAI,SAACC,GAEV,OADAF,EAAWG,KAAKD,EAAME,MACfJ,KAGWA,EAAWK,KAAK,KAUxBC,CAAmBX,EAAKR,SAClCK,EAAaG,EAAKY,mBAEnB,CAACpC,KAGF,4BACE,mBAAQqC,KAAK,SAASC,QA5BX,WACbhC,EAAQF,EAASmC,QA2BwBC,UAAWC,EAAlD,sBAGA,iBAAKD,UAAWC,EAAhB,WACE,gBAAKC,IAAKxB,EAAQyB,IAAKjC,EAAO8B,UAAWC,KAEzC,iBAAKD,UAAWC,EAAhB,WACE,0BACG/B,EADH,KACYI,EADZ,QAGA,wCAAgBM,MAChB,sCACA,uBAAIR,KACJ,oCACA,uBAAII,WAGR,mBACA,mDACA,iBAAKwB,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMG,GAAE,kBAAa5C,EAAb,SAA6BuC,MAAOnC,EAASmC,MAArD,mBAGA,SAAC,KAAD,CAAMK,GAAE,kBAAa5C,EAAb,YAAgCuC,MAAOnC,EAASmC,MAAxD,yBAKF,mBACA,SAAC,KAAD","sources":["components/Api/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"7c2b5f1208ac9dcd0fcc391e6217ace1\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieDetailsPage_movieCard__Z2T8b\",\"movieCardImg\":\"MovieDetailsPage_movieCardImg__whJER\",\"movieCardInfo\":\"MovieDetailsPage_movieCardInfo__j7yNS\",\"movieCardLink\":\"MovieDetailsPage_movieCardLink__sOQ+G\",\"btn\":\"MovieDetailsPage_btn__oGTxV\"};","import React, { useEffect, useState } from \"react\";\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from \"react-router-dom\";\nimport { fetchMovieId } from \"../Api/Api\";\n\nimport styles from \"../MovieDetailsPage/MovieDetailsPage.module.css\";\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const history = useNavigate();\n  const { movieId } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [overview, setOverview] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [genres, setGenres] = useState(\"\");\n  const [poster, setPoster] = useState(\"\");\n  const [userScore, setUserScore] = useState(\"\");\n\n  const goBack = () => {\n    history(location.state);\n  };\n\n  function createListOfGenres(genres) {\n    const genresList = [];\n    genres.map((genre) => {\n      genresList.push(genre.name);\n      return genresList;\n    });\n\n    const genreString = genresList.join(\" \");\n    return genreString;\n  }\n\n  useEffect(() => {\n    fetchMovieId(movieId).then((data) => {\n      setPoster(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n      setTitle(data.original_title);\n      setOverview(data.overview);\n      setDate(data.release_date.slice(0, 4));\n      setGenres(createListOfGenres(data.genres));\n      setUserScore(data.vote_average);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <button type=\"button\" onClick={goBack} className={styles.btn}>\n        Go back\n      </button>\n      <div className={styles.movieCard}>\n        <img src={poster} alt={title} className={styles.movieCardImg}></img>\n\n        <div className={styles.movieCardInfo}>\n          <h1>\n            {title} ({date})\n          </h1>\n          <p>User Score: {userScore}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </div>\n      <hr></hr>\n      <p>Additional information</p>\n      <div className={styles.movieCardLink}>\n        <Link to={`/movies/${movieId}/cast`} state={location.state}>\n          Cast\n        </Link>\n        <Link to={`/movies/${movieId}/reviews`} state={location.state}>\n          Reviews\n        </Link>\n      </div>\n\n      <hr></hr>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","MovieDetailsPage","location","useLocation","history","useNavigate","useParams","useState","title","setTitle","overview","setOverview","date","setDate","genres","setGenres","poster","setPoster","userScore","setUserScore","useEffect","then","data","poster_path","original_title","release_date","slice","genresList","map","genre","push","name","join","createListOfGenres","vote_average","type","onClick","state","className","styles","src","alt","to"],"sourceRoot":""}