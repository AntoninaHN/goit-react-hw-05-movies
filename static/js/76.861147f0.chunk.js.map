{"version":3,"file":"static/js/76.861147f0.chunk.js","mappings":"qSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,wEACgDc,EADhD,+CAKxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACaf,EADb,oBAKxB,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,oBAKxB,SAASiB,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,6B,iHClC/B,EAA0B,sB,SCKX,SAASkB,IACtB,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAkBD,GAASS,MAAK,SAACC,GAC/BH,EAAQG,EAAKJ,WAEd,CAACN,KAGF,8BACGM,IACC,wBACGA,EAAKK,KAAI,SAACC,GAAD,OACR,2BACE,gBACEC,UAAWC,EACXC,IACEH,EAAKI,aAAL,yCACsCJ,EAAKI,cACvCC,EAENC,IAAKN,EAAKO,QAEZ,uBAAIP,EAAKO,QACT,sCAAcP,EAAKQ,eAXZR,EAAKS,a","sources":["components/Api/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"7c2b5f1208ac9dcd0fcc391e6217ace1\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=7c2b5f1208ac9dcd0fcc391e6217ace1&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"roleImg\":\"Cast_roleImg__wCZJc\"};","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCredits } from \"../Api/Api\";\nimport defaultImg from \"../errorImg.jpg\";\nimport styles from \"../Cast/Cast.module.css\";\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then((data) => {\n      setCast(data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.map((item) => (\n            <li key={item.id}>\n              <img\n                className={styles.roleImg}\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                    : defaultImg\n                }\n                alt={item.name}\n              ></img>\n              <p>{item.name}</p>\n              <p>Character:{item.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","MovieDetailsPage","useParams","useState","cast","setCast","useEffect","then","data","map","item","className","styles","src","profile_path","defaultImg","alt","name","character","id"],"sourceRoot":""}