{"version":3,"file":"static/js/186.3616b5da.chunk.js","mappings":"qSAAMA,EAAW,+BACXC,EAAU,mCACT,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0Ba,EAD1B,+CAKxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACaf,EADb,oBAKxB,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,oBAKxB,SAASiB,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,6B,2ECL/B,UA3BA,WACE,IAAQe,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAkBF,GAASQ,MAAK,SAACC,GAAD,OAAUH,EAAWG,EAAKC,cACzD,CAACV,IAEJ,IAAMW,EAAMN,EAAQO,KAAI,SAACC,GAAD,OACtB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,eAAeC,aAMjC,OACE,+BACE,0BACU,OAAPZ,QAAO,IAAPA,OAAA,EAAAA,EAASa,QAAS,GACjB,wBAAKb,GAAWM,KAEhB","sources":["Api/Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"7c2b5f1208ac9dcd0fcc391e6217ace1\";\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nconst Api = {\n  fetchTrendingMovie,\n  fetchSearchMovies,\n  fetchMovieId,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n\nexport default Api;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"../../Api/Api\";\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then((data) => setReviews(data.results));\n  }, [movieId]);\n\n  const rev = reviews.map((review) => (\n    <li key={review.author_details.username}>\n      <h3>Author:{review.author}</h3>\n      <p>{review.content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <div>\n        {reviews?.length > 0 ? (\n          <ul>{reviews && rev}</ul>\n        ) : (\n          <p>Nobody has written a review yet.</p>\n        )}\n      </div>\n    </>\n  );\n}\nexport default MovieDetailsPage;\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","useParams","useState","reviews","setReviews","useEffect","then","data","results","rev","map","review","author","content","author_details","username","length"],"sourceRoot":""}