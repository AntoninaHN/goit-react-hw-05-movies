{"version":3,"file":"static/js/736.d8698bc0.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACeC,IAIvC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0Ba,EAD1B,+CAKxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACaf,EADb,oBAKxB,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,oBAKxB,SAASiB,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACqBf,EADrB,6B,kHClC/B,EAA6B,8BAA7B,EAA6E,mCAA7E,EAAyH,0B,SCG1G,SAASkB,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAAUP,EAAS,EAATA,MACtD,OACE,kBAAMM,SAAUA,EAAUE,UAAWC,EAArC,WACE,kBACED,UAAWC,EACXC,KAAK,OACLC,MAAOX,EACPY,YAAY,gBACZL,SAAUA,KAGZ,mBAAQG,KAAK,SAASF,UAAWC,EAAjC,UACE,0CCXO,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,MAArC,eAAOE,EAAP,KAAeC,EAAf,KAyBA,OARAC,EAAAA,EAAAA,YAAU,WACJN,EAASO,SACXtB,EAAAA,EAAAA,IAAkBe,EAASO,QAAQC,MAAK,SAACC,GAAD,OACtCJ,EAAUI,EAAKC,cAGlB,CAACV,EAASO,UAGX,iCACE,SAAChB,EAAD,CACEC,SAtBe,SAACmB,GACpBA,EAAIC,iBACiB,KAAjB1B,EAAM2B,QAIVV,EAASjB,GACTc,EAASO,OAASrB,GAClBD,EAAAA,EAAAA,IAAkBC,GAAOsB,MAAK,SAACC,GAAD,OAAUJ,EAAUI,EAAKC,aALrDI,MAAM,oFAoBJrB,SA3Be,SAACkB,GACpBR,EAASQ,EAAII,OAAOlB,MAAMmB,gBA2BtBnB,MAAOX,IAERkB,IACC,wBACGA,EAAOa,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAOrB,EAAxC,SACGkB,EAAMI,SAFFJ,EAAME","sources":["components/Api/Api.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"7c2b5f1208ac9dcd0fcc391e6217ace1\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchFormInput\":\"SearchBar_searchFormInput__9ldTo\",\"button\":\"SearchBar_button__T7RTc\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../SearchBar/SearchBar.module.css\";\n\nexport default function Searchbar({ onSubmit, onChange, query }) {\n  return (\n    <form onSubmit={onSubmit} className={styles.searchForm}>\n      <input\n        className={styles.searchFormInput}\n        type=\"text\"\n        value={query}\n        placeholder=\"Search movies\"\n        onChange={onChange}\n      />\n\n      <button type=\"submit\" className={styles.button}>\n        <span>Search</span>\n      </button>\n    </form>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchSearchMovies } from \"../Api/Api\";\nimport Searchbar from \"../SearchBar/SearchBar\";\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState(null);\n\n  const handleSearch = (evt) => {\n    setQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (query.trim() === \"\") {\n      alert(\"Введите запрос\");\n      return;\n    }\n    setQuery(query);\n    location.search = query;\n    fetchSearchMovies(query).then((data) => setMovies(data.results));\n  };\n\n  useEffect(() => {\n    if (location.search) {\n      fetchSearchMovies(location.search).then((data) =>\n        setMovies(data.results)\n      );\n    }\n  }, [location.search]);\n\n  return (\n    <>\n      <Searchbar\n        onSubmit={handleSubmit}\n        onChange={handleSearch}\n        value={query}\n      />\n      {movies && (\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={location}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","Searchbar","onSubmit","onChange","className","styles","type","value","placeholder","MoviesPage","location","useLocation","useState","setQuery","movies","setMovies","useEffect","search","then","data","results","evt","preventDefault","trim","alert","target","toLowerCase","map","movie","to","id","state","title"],"sourceRoot":""}