{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/Cast/Cast.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCredits } from \"../Api/Api\";\nimport defaultImg from \"../errorImg.jpg\";\nimport styles from \"../Cast/Cast.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieDetailsPage() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(data => {\n      setCast(data.cast);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cast && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cast.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.roleImg,\n          src: item.profile_path ? `https://image.tmdb.org/t/p/w500${item.profile_path}` : defaultImg,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Character:\", item.character]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MovieDetailsPage, \"ypf7SeOqgsaYrfL4vNHQNJPjvEs=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"names":["React","useEffect","useState","useParams","fetchMovieCredits","defaultImg","styles","MovieDetailsPage","movieId","cast","setCast","then","data","map","item","roleImg","profile_path","name","character","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,iBAAiB,CAACI,OAAD,CAAjB,CAA2BG,IAA3B,CAAiCC,IAAD,IAAU;AACxCF,MAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,CAACD,OAAD,CAJM,CAAT;AAMA,sBACE;AAAA,cACGC,IAAI,iBACH;AAAA,gBACGA,IAAI,CAACI,GAAL,CAAUC,IAAD,iBACR;AAAA,gCACE;AACE,UAAA,SAAS,EAAER,MAAM,CAACS,OADpB;AAEE,UAAA,GAAG,EACDD,IAAI,CAACE,YAAL,GACK,kCAAiCF,IAAI,CAACE,YAAa,EADxD,GAEIX,UALR;AAOE,UAAA,GAAG,EAAES,IAAI,CAACG;AAPZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBAAIH,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAA,mCAAcH,IAAI,CAACI,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA,SAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAuBD;;GAjCuBZ,gB;UACFJ,S;;;KADEI,gB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCredits } from \"../Api/Api\";\nimport defaultImg from \"../errorImg.jpg\";\nimport styles from \"../Cast/Cast.module.css\";\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then((data) => {\n      setCast(data.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.map((item) => (\n            <li key={item.id}>\n              <img\n                className={styles.roleImg}\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\n                    : defaultImg\n                }\n                alt={item.name}\n              ></img>\n              <p>{item.name}</p>\n              <p>Character:{item.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}