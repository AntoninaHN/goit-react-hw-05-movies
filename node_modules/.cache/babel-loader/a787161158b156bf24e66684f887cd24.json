{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/MovieDetailsPage/MovieDetailsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { fetchMovieId } from '../Api/Fetch';\nimport styles from '../MovieDetailsPage/MovieDetailsPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieDetailsPage() {\n  _s();\n\n  const location = useLocation();\n  const history = useNavigate();\n  const {\n    movieId\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [date, setDate] = useState('');\n  const [genres, setGenres] = useState('');\n  const [poster, setPoster] = useState('');\n  const [userScore, setUserScore] = useState('');\n\n  const goBack = () => {\n    history(location.state);\n  };\n\n  function createListOfGenres(genres) {\n    const genresList = [];\n    genres.map(genre => {\n      genresList.push(genre.name);\n      return genresList;\n    });\n    const genreString = genresList.join(\" \");\n    return genreString;\n  }\n\n  useEffect(() => {\n    fetchMovieId(movieId).then(data => {\n      setPoster(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n      setTitle(data.original_title);\n      setOverview(data.overview);\n      setDate(data.release_date.slice(0, 4));\n      setGenres(createListOfGenres(data.genres));\n      setUserScore(data.vote_average);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: goBack,\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movieCard,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: poster,\n        alt: title,\n        className: styles.movieCard_img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movieCard_info,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [title, \" (\", date, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Score: \", userScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Additional information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movieCard_link,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/movies/${movieId}/cast`,\n        state: location.state,\n        children: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movies/${movieId}/reviews`,\n        state: location.state,\n        children: \"Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieDetailsPage, \"TuydZRZwaHLDkWl+oV7lWzgYaeY=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = MovieDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["React","useEffect","useState","Link","useParams","Outlet","useNavigate","useLocation","fetchMovieId","styles","MovieDetailsPage","location","history","movieId","title","setTitle","overview","setOverview","date","setDate","genres","setGenres","poster","setPoster","userScore","setUserScore","goBack","state","createListOfGenres","genresList","map","genre","push","name","genreString","join","then","data","poster_path","original_title","release_date","slice","vote_average","movieCard","movieCard_img","movieCard_info","movieCard_link"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, Outlet, useNavigate, useLocation} from \"react-router-dom\";\nimport {fetchMovieId} from '../Api/Fetch';\n\nimport styles from '../MovieDetailsPage/MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage (){\n    const location = useLocation();\n    const history = useNavigate();\n    const { movieId } = useParams();\n    const [title, setTitle] = useState('');\n    const [overview, setOverview] = useState('');\n    const [date, setDate] = useState('');\n    const [genres, setGenres] = useState('');\n    const [poster, setPoster] = useState('');\n    const [userScore, setUserScore] = useState('');\n       \n    const goBack = ()=> {\n        history(location.state);\n         \n    };\n   \n    function createListOfGenres (genres){\n        const genresList = [];\n        genres.map(genre=>{\n            genresList.push(genre.name);\n            return genresList;\n        })\n        \n        const genreString = genresList.join(\" \");\n        return genreString;\n    }\n\n    useEffect(()=>{\n        fetchMovieId(movieId).then(data=>{\n            setPoster(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n            setTitle(data.original_title);\n            setOverview(data.overview);\n            setDate(data.release_date.slice(0, 4));\n            setGenres(createListOfGenres(data.genres));\n            setUserScore(data.vote_average);\n        });\n    },[movieId]);\n   \n    return(\n        <div>\n        <button type=\"button\" onClick={goBack} >Go back</button>\n        <div className={styles.movieCard}>\n            <img src={poster} alt={title} className={styles.movieCard_img}></img>\n\n            <div className={styles.movieCard_info}>\n                <h1>{title} ({date})</h1>\n                <p>User Score: {userScore}</p>\n                <h2>Overview</h2>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres}</p>\n            </div>\n        </div>\n        <hr></hr>\n        <p>Additional information</p>\n        <div className={styles.movieCard_link}>\n            <Link to={`/movies/${ movieId }/cast` } state={location.state}>Cast</Link>\n            <Link to={`/movies/${ movieId }/reviews`} state={location.state}>Reviews</Link>\n        </div>\n        \n        <hr></hr>\n        <Outlet />\n        </div>\n                \n    );\n    \n}"]},"metadata":{},"sourceType":"module"}