{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviesPage/MoviesPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchSearchMovies } from \"../Api/Api\";\nimport Searchbar from \"../SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MoviesPage() {\n  _s();\n\n  const location = useLocation();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState(null);\n\n  const handleSearch = evt => {\n    setQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === \"\") {\n      alert(\"Введите запрос\");\n      return;\n    }\n\n    setQuery(query);\n    location.search = query;\n    fetchSearchMovies(query).then(data => setMovies(data.results));\n  };\n\n  useEffect(() => {\n    if (location.search) {\n      fetchSearchMovies(location.search).then(data => setMovies(data.results));\n    }\n  }, [location.search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onSubmit: handleSubmit,\n      onChange: handleSearch,\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), movies && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          state: location,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoviesPage, \"+KNGGZ/qlNufBbrfpNxnU/e/XqU=\", false, function () {\n  return [useLocation];\n});\n\n_c = MoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviesPage/MoviesPage.jsx"],"names":["React","useEffect","useState","Link","useLocation","fetchSearchMovies","Searchbar","MoviesPage","location","query","setQuery","movies","setMovies","handleSearch","evt","target","value","toLowerCase","handleSubmit","preventDefault","trim","alert","search","then","data","results","map","movie","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMW,YAAY,GAAIC,GAAD,IAAS;AAC5BJ,IAAAA,QAAQ,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBC,WAAjB,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIJ,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACK,cAAJ;;AACA,QAAIV,KAAK,CAACW,IAAN,OAAiB,EAArB,EAAyB;AACvBC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACD;;AACDX,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAACc,MAAT,GAAkBb,KAAlB;AACAJ,IAAAA,iBAAiB,CAACI,KAAD,CAAjB,CAAyBc,IAAzB,CAA+BC,IAAD,IAAUZ,SAAS,CAACY,IAAI,CAACC,OAAN,CAAjD;AACD,GATD;;AAWAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,QAAQ,CAACc,MAAb,EAAqB;AACnBjB,MAAAA,iBAAiB,CAACG,QAAQ,CAACc,MAAV,CAAjB,CAAmCC,IAAnC,CAAyCC,IAAD,IACtCZ,SAAS,CAACY,IAAI,CAACC,OAAN,CADX;AAGD;AACF,GANQ,EAMN,CAACjB,QAAQ,CAACc,MAAV,CANM,CAAT;AAQA,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,QAAQ,EAAEJ,YADZ;AAEE,MAAA,QAAQ,EAAEL,YAFZ;AAGE,MAAA,KAAK,EAAEJ;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,EAMGE,MAAM,iBACL;AAAA,gBACGA,MAAM,CAACe,GAAP,CAAYC,KAAD,iBACV;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAiC,UAAA,KAAK,EAAEpB,QAAxC;AAAA,oBACGmB,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA;AADF,SAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAoBD;;GAhDuBrB,U;UACLH,W;;;KADKG,U","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchSearchMovies } from \"../Api/Api\";\nimport Searchbar from \"../SearchBar/SearchBar\";\n\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState(null);\n\n  const handleSearch = (evt) => {\n    setQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (query.trim() === \"\") {\n      alert(\"Введите запрос\");\n      return;\n    }\n    setQuery(query);\n    location.search = query;\n    fetchSearchMovies(query).then((data) => setMovies(data.results));\n  };\n\n  useEffect(() => {\n    if (location.search) {\n      fetchSearchMovies(location.search).then((data) =>\n        setMovies(data.results)\n      );\n    }\n  }, [location.search]);\n\n  return (\n    <>\n      <Searchbar\n        onSubmit={handleSubmit}\n        onChange={handleSearch}\n        value={query}\n      />\n      {movies && (\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={location}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}