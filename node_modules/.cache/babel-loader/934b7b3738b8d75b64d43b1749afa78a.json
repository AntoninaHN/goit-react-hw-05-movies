{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/Cast/Cast.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCredits } from '../Api/Fetch';\nimport defaultImg from '../errorImg.jpg';\nimport styles from '../Cast/Cast.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieDetailsPage() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(data => {\n      setCast(data.cast);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cast && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cast.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.roleImg,\n          src: item.profile_path ? `https://image.tmdb.org/t/p/w500${item.profile_path}` : defaultImg,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Character:\", item.character]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MovieDetailsPage, \"ypf7SeOqgsaYrfL4vNHQNJPjvEs=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"names":["React","useEffect","useState","useParams","fetchMovieCredits","defaultImg","styles","MovieDetailsPage","movieId","cast","setCast","then","data","map","item","roleImg","profile_path","name","character","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAAyB,kBAAzB;AACA,SAAQC,iBAAR,QAAgC,cAAhC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,iBAAiB,CAACI,OAAD,CAAjB,CAA2BG,IAA3B,CAAgCC,IAAI,IAAE;AAClCF,MAAAA,OAAO,CAACE,IAAI,CAACH,IAAN,CAAP;AAEH,KAHD;AAIH,GALQ,EAKP,CAACD,OAAD,CALO,CAAT;AAOA,sBACI;AAAA,cACKC,IAAI,iBACL;AAAA,gBACKA,IAAI,CAACI,GAAL,CAASC,IAAI,iBAEV;AAAA,gCACI;AAAK,UAAA,SAAS,EAAER,MAAM,CAACS,OAAvB;AAAgC,UAAA,GAAG,EAAGD,IAAI,CAACE,YAAL,GAAsB,kCAAiCF,IAAI,CAACE,YAAa,EAAzE,GAA+EX,UAArH;AAAkI,UAAA,GAAG,EAAES,IAAI,CAACG;AAA5I;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIH,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,mCAAcH,IAAI,CAACI,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cAFH;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAkBH;;GA7BuBZ,gB;UACAJ,S;;;KADAI,gB","sourcesContent":["import React, {  useEffect, useState } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport {fetchMovieCredits} from '../Api/Fetch';\nimport defaultImg from '../errorImg.jpg';\nimport styles from '../Cast/Cast.module.css';\n\nexport default function MovieDetailsPage (){\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(()=>{\n        fetchMovieCredits(movieId).then(data=>{\n            setCast(data.cast);\n            \n        });\n    },[movieId]);\n    \n    return(\n        <>\n            {cast&&(\n            <ul>\n                {cast.map(item=>(\n                    \n                    <li key={item.id}>\n                        <img className={styles.roleImg} src= {item.profile_path ? (`https://image.tmdb.org/t/p/w500${item.profile_path}`) : (defaultImg)} alt={item.name}></img>\n                        <p>{item.name}</p>\n                        <p>Character:{item.character}</p>\n                    </li>\n                ))}\n            </ul> \n            )}\n        </>\n         \n    );\n    \n}"]},"metadata":{},"sourceType":"module"}