{"ast":null,"code":"var _jsxFileName = \"/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviesPage/MoviesPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchSearchMovies } from '../Api/Fetch';\nimport Searchbar from \"../SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MoviesPage() {\n  _s();\n\n  const location = useLocation();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n\n  const handleSearch = evt => {\n    setQuery(evt.target.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Введите запрос');\n      return;\n    }\n\n    setQuery(query);\n    location.search = query;\n    fetchSearchMovies(query).then(data => setMovies(data.results));\n  };\n\n  useEffect(() => {\n    if (location.search) {\n      fetchSearchMovies(location.search).then(data => setMovies(data.results));\n    }\n  }, [location.search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onSubmit: handleSubmit,\n      onChange: handleSearch,\n      value: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), movies && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          state: location,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoviesPage, \"Qj6wzWj8frEcoz+YEycBffsTVJw=\", false, function () {\n  return [useLocation];\n});\n\n_c = MoviesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"sources":["/Users/tonya/Documents/GitHub/goit-react-hw-05-movies/src/components/MoviesPage/MoviesPage.jsx"],"names":["React","useEffect","useState","Link","useLocation","fetchSearchMovies","Searchbar","MoviesPage","location","query","setQuery","movies","setMovies","handleSearch","evt","target","value","toLowerCase","handleSubmit","preventDefault","trim","alert","search","then","data","results","map","movie","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAiC,kBAAjC;AACA,SAAQC,iBAAR,QAAgC,cAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMW,YAAY,GAAGC,GAAG,IAAI;AACxBJ,IAAAA,QAAQ,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAX,CAAiBC,WAAjB,EAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGJ,GAAG,IAAE;AACtBA,IAAAA,GAAG,CAACK,cAAJ;;AACA,QAAGV,KAAK,CAACW,IAAN,OAAe,EAAlB,EAAqB;AACjBC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA;AACH;;AACDX,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAACc,MAAT,GAAgBb,KAAhB;AACAJ,IAAAA,iBAAiB,CAACI,KAAD,CAAjB,CAAyBc,IAAzB,CAA8BC,IAAI,IAAEZ,SAAS,CAACY,IAAI,CAACC,OAAN,CAA7C;AAEH,GAVD;;AAaAxB,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAGO,QAAQ,CAACc,MAAZ,EAAmB;AACfjB,MAAAA,iBAAiB,CAACG,QAAQ,CAACc,MAAV,CAAjB,CAAmCC,IAAnC,CAAwCC,IAAI,IAAEZ,SAAS,CAACY,IAAI,CAACC,OAAN,CAAvD;AACH;AAEJ,GANQ,EAMP,CAACjB,QAAQ,CAACc,MAAV,CANO,CAAT;AAQA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEJ,YAArB;AAAmC,MAAA,QAAQ,EAAEL,YAA7C;AAA2D,MAAA,KAAK,EAAEJ;AAAlE;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,MAAM,iBACP;AAAA,gBACKA,MAAM,CAACe,GAAP,CAAWC,KAAK,iBACb;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAiC,UAAA,KAAK,EAAEpB,QAAxC;AAAA,oBACKmB,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA;AADJ,SAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAkBH;;GAhDuBrB,U;UACHH,W;;;KADGG,U","sourcesContent":["import React, {  useEffect, useState } from \"react\";\nimport { Link, useLocation} from \"react-router-dom\";\nimport {fetchSearchMovies} from '../Api/Fetch';\nimport Searchbar from \"../SearchBar/SearchBar\";\n\nexport default function MoviesPage (){\n    const location = useLocation();\n    const [query,setQuery] = useState('');\n    const [movies, setMovies] = useState(null);\n        \n    const handleSearch = evt => {\n        setQuery(evt.target.value.toLowerCase());\n    };\n\n    const handleSubmit = evt=>{\n        evt.preventDefault();\n        if(query.trim()===''){\n            alert('Введите запрос');\n            return;\n        }\n        setQuery(query);\n        location.search=query;\n        fetchSearchMovies(query).then(data=>setMovies(data.results));\n        \n    };\n\n    \n    useEffect(()=>{\n           \n        if(location.search){\n            fetchSearchMovies(location.search).then(data=>setMovies(data.results));\n        }\n        \n    },[location.search]);\n\n    return(\n        <>\n            <Searchbar onSubmit={handleSubmit} onChange={handleSearch} value={query}/>\n            {movies&&(\n            <ul>\n                {movies.map(movie=>(\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`} state={location}>\n                            {movie.title}\n                        </Link>\n                    </li>\n                ))}\n            </ul> \n            )}\n        </>\n                \n    );\n    \n}\n"]},"metadata":{},"sourceType":"module"}